package com.fabiocompany.supermercadosdeltaplus.model;
// Generated 24/09/2017 15:11:33 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.MappedSuperclass;
import javax.persistence.Table;

/**
 * Detalleticket generated by hbm2java
 */
//@MappedSuperclass
@Entity
@Table(name="detalleticket")
public class Detalleticket  implements java.io.Serializable {

    //@EmbeddedId
    //@AttributeOverride(name="iddetalleticket", column = @Column(name="iddetalleticket"))
    @Id
    @Column(name="iddetalleticket")
	@GeneratedValue(strategy=GenerationType.AUTO)
    private int iddetalleticket;
     
    @ManyToOne
    @JoinColumn(name="idticket")  
    private Cabeceraticket cabeceraticket;
    
    @ManyToOne
    @JoinColumn(name="idtipodepago")
    private Tipodepago tipodepago;
    
    @Column(name="cantidad")
    private int cantidad;
    
    @Column(name="montodepago")
    private double montodepago;
    
    @Column(name="subtotal")
    private double subtotal;
    
    @Column(name="total")
    private double total;
    
    @Column(name="cantidadporproducto")
    private int cantidadporproducto;
    
    @ManyToMany(cascade = {CascadeType.ALL})
	@JoinTable(name="ticketsyofertas", joinColumns = {
            @JoinColumn(name = "iddetalleticket") }, inverseJoinColumns = {
		@JoinColumn(name = "iddetalleoferta") })
    private Set<Detalleoferta> detalleofertas = new HashSet(0);
    
    @ManyToMany(cascade = {CascadeType.ALL})
	@JoinTable(name="ticketsyproductos", joinColumns = {
            @JoinColumn(name = "iddetalleticket") }, inverseJoinColumns = {
		@JoinColumn(name = "idproducto") })
    private Set<Producto> productos = new HashSet(0);

    public Detalleticket() {
    }

	
    public Detalleticket(int iddetalleticket, Cabeceraticket cabeceraticket, Tipodepago tipodepago) {
        this.iddetalleticket = iddetalleticket;
        this.cabeceraticket = cabeceraticket;
        this.tipodepago = tipodepago;
    }
    public Detalleticket(int iddetalleticket, Cabeceraticket cabeceraticket, Tipodepago tipodepago, Integer cantidad, Double montodepago, Double subtotal, Double total, Integer cantidadporproducto, Set<Detalleoferta> detalleofertas, Set<Producto> productos) {
       this.iddetalleticket = iddetalleticket;
       this.cabeceraticket = cabeceraticket;
       this.tipodepago = tipodepago;
       this.cantidad = cantidad;
       this.montodepago = montodepago;
       this.subtotal = subtotal;
       this.total = total;
       this.cantidadporproducto = cantidadporproducto;
       this.detalleofertas = detalleofertas;
       this.productos = productos;
    }
   
    public int getIddetalleticket() {
        return this.iddetalleticket;
    }
    
    public void setIddetalleticket(int iddetalleticket) {
        this.iddetalleticket = iddetalleticket;
    }
    public Cabeceraticket getCabeceraticket() {
        return this.cabeceraticket;
    }
    
    public void setCabeceraticket(Cabeceraticket cabeceraticket) {
        this.cabeceraticket = cabeceraticket;
    }
    public Tipodepago getTipodepago() {
        return this.tipodepago;
    }
    
    public void setTipodepago(Tipodepago tipodepago) {
        this.tipodepago = tipodepago;
    }
    public Integer getCantidad() {
        return this.cantidad;
    }
    
    public void setCantidad(Integer cantidad) {
        this.cantidad = cantidad;
    }
    public Double getMontodepago() {
        return this.montodepago;
    }
    
    public void setMontodepago(Double montodepago) {
        this.montodepago = montodepago;
    }
    public Double getSubtotal() {
        return this.subtotal;
    }
    
    public void setSubtotal(Double subtotal) {
        this.subtotal = subtotal;
    }
    public Double getTotal() {
        return this.total;
    }
    
    public void setTotal(Double total) {
        this.total = total;
    }
    public Integer getCantidadporproducto() {
        return this.cantidadporproducto;
    }
    
    public void setCantidadporproducto(Integer cantidadporproducto) {
        this.cantidadporproducto = cantidadporproducto;
    }
    public Set getDetalleofertas() {
        return this.detalleofertas;
    }
    
    public void setDetalleofertas(Set<Detalleoferta> detalleofertas) {
        this.detalleofertas = detalleofertas;
    }
    public Set getProductos() {
        return this.productos;
    }
    
    public void setProductos(Set<Producto> productos) {
        this.productos = productos;
    }
    
    @Override
    public int hashCode() {
        return getIddetalleticket();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Detalleticket other = (Detalleticket) obj;
        if (this.getIddetalleticket() != other.getIddetalleticket()) {
            return false;
        }
        return true;
    }



}


